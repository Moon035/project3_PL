:root {
  --primary-color: #3498db;
  --secondary-color: #2c3e50;
  --accent-color: #e74c3c;
  --bg-color: #f8f9fa;
  --text-color: #333;
  --border-color: #ddd;
  --node-bg: #fff;
  --function-color: #4caf50;
  --constant-color: #9c27b0;
  --variable-color: #2196f3;
  --operation-color: #ff9800;
  --conditional-color: #e91e63;
  --application-color: #4caf50;
  --letbinding-color: #009688;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  line-height: 1.6;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

header {
  background-color: var(--secondary-color);
  color: white;
  padding: 20px 0;
  margin-bottom: 30px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

header h1 {
  margin: 0;
  font-size: 24px;
}

header p {
  margin: 5px 0 0;
  opacity: 0.8;
}

.app-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 30px;
  margin-bottom: 40px;
}

.input-section, .output-section {
  background-color: white;
  border-radius: 8px;
  padding: 20px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.form-group {
  margin-bottom: 20px;
}

.code-input {
  width: 100%;
  min-height: 200px;
  padding: 15px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-family: 'Consolas', 'Courier New', monospace;
  font-size: 14px;
  resize: vertical;
}

.btn-parse {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.2s;
}

.btn-parse:hover {
  background-color: #2980b9;
}

.examples {
  margin-top: 20px;
  padding-top: 20px;
  border-top: 1px solid var(--border-color);
}

.example-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-top: 10px;
}

.btn-example {
  background-color: #ecf0f1;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 8px 15px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.2s;
}

.btn-example:hover {
  background-color: #e0e6e8;
}

.error-panel {
  background-color: #fef5f5;
  border: 1px solid #f8d7d7;
  border-radius: 4px;
  padding: 15px;
  margin-bottom: 20px;
  color: var(--accent-color);
}

.ast-container {
  min-height: 400px;
  overflow: auto;
  padding: 20px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: #ffffff;
}

/* AST Tree Styling */
.tree {
  text-align: center;
  padding: 20px;
}

.tree ul {
  padding-top: 20px;
  position: relative;
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
  margin: 0;
  padding-left: 0;
  display: flex;
  justify-content: center;
}

.tree li {
  text-align: center;
  list-style-type: none;
  position: relative;
  padding: 20px 5px 0 5px;
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
  float: none;
  display: inline-block;
  vertical-align: top;
}

/*We will use ::before and ::after to draw the connectors*/
.tree li::before, .tree li::after{
  content: '';
  position: absolute; 
  top: 0; 
  right: 50%;
  border-top: 1px solid #ccc;
  width: 50%; 
  height: 20px;
}

.tree li::after{
  right: auto; 
  left: 50%;
  border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
  display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child{ 
  padding-top: 0;
}

/*Remove left connector from first child and right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after{
  border: 0 none;
}

/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before{
  border-right: 1px solid #ccc;
  border-radius: 0 5px 0 0;
  -webkit-border-radius: 0 5px 0 0;
  -moz-border-radius: 0 5px 0 0;
}

.tree li:first-child::after{
  border-radius: 5px 0 0 0;
  -webkit-border-radius: 5px 0 0 0;
  -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before{
  content: '';
  position: absolute; 
  top: 0; 
  left: 50%;
  border-left: 1px solid #ccc;
  width: 0; 
  height: 20px;
}

.tree li .node {
  border: 1px solid #999;
  padding: 10px 15px;
  text-decoration: none;
  color: #333;
  font-size: 14px;
  display: inline-block;
  border-radius: 5px;
  transition: all 0.5s;
  min-width: 120px;
  background: #fff;
  position: relative;
  margin: 0 10px;
}

.tree li .node:hover {
  background: #f5f5f5;
  border: 1px solid #666;
}

.node-type {
  font-weight: bold;
  margin-bottom: 5px;
}

.node-property {
  font-size: 12px;
  color: #666;
}

/* Color coding for different node types */
.node-function {
  background-color: #e8f5e9 !important;
  border-color: #4caf50 !important;
}

.node-binaryop {
  background-color: #fff3e0 !important;
  border-color: #ff9800 !important;
}

.node-variable {
  background-color: #e3f2fd !important;
  border-color: #2196f3 !important;
}

.node-constant {
  background-color: #f3e5f5 !important;
  border-color: #9c27b0 !important;
}

.node-ifthenelse {
  background-color: #fce4ec !important;
  border-color: #e91e63 !important;
}

.node-letbinding {
  background-color: #e0f2f1 !important;
  border-color: #009688 !important;
}

.node-application {
  background-color: #f0f4c3 !important;
  border-color: #cddc39 !important;
}

footer {
  margin-top: 20px;
  padding: 20px 0;
  text-align: center;
  border-top: 1px solid var(--border-color);
  color: #7f8c8d;
}

/* Responsive design */
@media (max-width: 768px) {
  .app-container {
    grid-template-columns: 1fr;
  }
  
  .tree {
    overflow-x: auto;
  }
  
  .tree ul {
    min-width: 800px;
  }
}